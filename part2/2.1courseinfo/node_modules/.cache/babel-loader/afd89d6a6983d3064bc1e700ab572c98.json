{"ast":null,"code":"var _jsxFileName = \"/mnt/c/repos/Fullstack/part2/2.1/part2-notes/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Header = _ref => {\n  let {\n    data\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: data.name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 10\n  }, this);\n};\n\n_c = Header;\n\nconst Line = _ref2 => {\n  let {\n    data\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [data.name, \" \", data.exercises]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 11\n  }, this);\n};\n\n_c2 = Line;\n\nconst Total = _ref3 => {\n  let {\n    data\n  } = _ref3;\n  const sum = data.parts.reduce((prevValue, currentValue) => prevValue + currentValue.exercises, 0);\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Total of \", sum, \" Exercises\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = Total;\n\nconst Course = _ref4 => {\n  let {\n    data\n  } = _ref4;\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      data: course\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: course.parts.map(line => /*#__PURE__*/_jsxDEV(Line, {\n        data: line\n      }, line.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Total, {\n      data: course\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_c4 = Course;\n\nconst App = () => {\n  const course = [{\n    name: 'Half Stack application development',\n    id: 1,\n    parts: [{\n      name: 'Fundamentals of React',\n      exercises: 10,\n      id: 1\n    }, {\n      name: 'Using props to pass data',\n      exercises: 7,\n      id: 2\n    }, {\n      name: 'State of a component',\n      exercises: 14,\n      id: 3\n    }, {\n      name: 'Redux',\n      exercises: 11,\n      id: 4\n    }]\n  }, {\n    name: 'Node.js',\n    id: 2,\n    parts: [{\n      name: 'Routing',\n      exercises: 3,\n      id: 1\n    }, {\n      name: 'Middlewares',\n      exercises: 7,\n      id: 2\n    }]\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: course.map(line => /*#__PURE__*/_jsxDEV(Course, {\n      data: line\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 27\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n\n_c5 = App;\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 92,\n  columnNumber: 17\n}, this), document.getElementById('root'));\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"Line\");\n$RefreshReg$(_c3, \"Total\");\n$RefreshReg$(_c4, \"Course\");\n$RefreshReg$(_c5, \"App\");","map":{"version":3,"sources":["/mnt/c/repos/Fullstack/part2/2.1/part2-notes/src/index.js"],"names":["React","ReactDOM","Header","data","name","Line","exercises","Total","sum","parts","reduce","prevValue","currentValue","Course","console","log","course","map","line","id","App","render","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\n\nconst Header = ({ data }) => {\n  return <h1>{data.name}</h1>\n}\n\nconst Line = ({ data }) => {\n  return (<li>{data.name} {data.exercises}</li>)\n}\n\nconst Total = ({ data }) => {\n  const sum = data.parts.reduce(\n    (prevValue, currentValue) => prevValue + currentValue.exercises, 0\n  )\n\n  return (\n    <p>Total of {sum} Exercises</p>\n  )\n}\n\nconst Course = ({ data }) => {\n\n  console.log(data)\n  return (\n    <div>\n      <Header data={course} />\n      <ul>\n        {course.parts.map(line =>\n          <Line key={line.id} data={line} />\n        )}\n      </ul>\n      <Total data={course} />\n    </div>\n  )\n}\n\nconst App = () => {\n  const course = [\n    {\n      name: 'Half Stack application development',\n      id: 1,\n      parts: [\n        {\n          name: 'Fundamentals of React',\n          exercises: 10,\n          id: 1\n        },\n        {\n          name: 'Using props to pass data',\n          exercises: 7,\n          id: 2\n        },\n        {\n          name: 'State of a component',\n          exercises: 14,\n          id: 3\n        },\n        {\n          name: 'Redux',\n          exercises: 11,\n          id: 4\n        }\n      ]\n    },\n    {\n      name: 'Node.js',\n      id: 2,\n      parts: [\n        {\n          name: 'Routing',\n          exercises: 3,\n          id: 1\n        },\n        {\n          name: 'Middlewares',\n          exercises: 7,\n          id: 2\n        }\n      ]\n    }\n  ]\n\n  return (\n    <div>\n      {course.map(line => <Course data={line} />)}\n    </div>\n  )\n}\n\nReactDOM.render(<App />, document.getElementById('root'))"]},"metadata":{},"sourceType":"module"}